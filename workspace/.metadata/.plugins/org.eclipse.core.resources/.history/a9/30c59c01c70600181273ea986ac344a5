package com.classes;

import java.sql.*;
import java.io.*;
public class UserDAO {
	static Connection con = null;
	public static UserBean insert(UserBean b){
		int result;
		try{
		con = ConnectionCon.getConnection();
		String sql="insert into agents(name,age_of_agent,age_of_business,email,address,password,contact,latitude,longitude) values(?,?,?,?,?,?,?,?,?)";
	    PreparedStatement ps = con.prepareStatement(sql);
	    ps.setString(1,b.getName());
	    ps.setInt(2,b.getAge_of_agent());
	    ps.setInt(3,b.getAge_of_Business());
	    ps.setString(4,b.getEmail());
	    ps.setString(5,b.getAddress());
	    ps.setString(6,b.getPassword());
	    ps.setLong(7,b.getContact());
	    ps.setDouble(8,b.getLat());
	    ps.setDouble(9,b.getLan());
	    
	    result = ps.executeUpdate();
	    
		if(result > 0){
	    	b.setMsg("Successfully inserted");
	    	b.setStatus(1);
	    }
	    else
	    {
	    	b.setMsg("Failed... Try Again");
	    	b.setStatus(0);
	    }
    
		}
		catch(Exception e){
			System.out.println(e);
		}
		finally{	
			if(con!=null){
			con = null;
			}
		}
		
		return b;
	}
  
	/*
	public static UserBean update(UserBean b){
		int result;
		try{
		con = ConnectionCon.getConnection();
	    String sql="update agents set name=?,age_of_agent=?,age_of_business=?,email=?,address=?,password=?,contact=?,latitude=?,longitude=? where id="+b.getId();
	    PreparedStatement ps = con.prepareStatement(sql);
	    ps.setString(1,b.getName());
	    ps.setInt(2,b.getAge_of_agent());
	    ps.setInt(3,b.getAge_of_Business());
	    ps.setString(4,b.getEmail());
	    ps.setString(5,b.getAddress());
	    ps.setString(6,b.getPassword());
	    ps.setLong(7,b.getContact());
	    ps.setDouble(8,b.getLat());
	    ps.setDouble(9,b.getLan());
	    
	    result = ps.executeUpdate();
	    if(result > 0){
	    	b.setMsg("Successfully Updated");
	    }
	    else
	    {
           b.setMsg("Can't update the record, try again");
	    }
    	}
		catch(Exception e){
			System.out.println(e);
		}
		finally{
			if(con!=null){
			con.close();
				con = null;
			}
		}
			return b;
}
*/

public static UserBean select(UserBean b) throws SQLException{
	String email = b.getEmail();
	String pass = b.getPassword();
	try{
	    con = ConnectionCon.getConnection();
	    String sql="select * from agents where email='"+email+"' and password='"+pass+"';";
	    Statement st = con.createStatement();
	    ResultSet rs = st.executeQuery(sql);
	       if(rs.next())
		    {
		    	b.setId(rs.getInt("agent_id"));
		    	b.setName(rs.getString("name"));
		    	b.setAge_of_agent(Integer.parseInt(rs.getString("age_of_agent")));
		    	b.setAge_of_Business(Integer.parseInt(rs.getString("age_of_business")));
		    	b.setEmail(rs.getString("email"));
		    	b.setAddress(rs.getString("address"));
		    	b.setPassword(rs.getString("password"));
		    	Blob blob = rs.getBlob("dp");
		        byte[] byteArray = blob.getBytes(1, (int)blob.length());
		     	b.setDp(byteArray);
		    	b.setSub_amt(rs.getInt("sub_amt"));
		    	b.setContact(Long.parseLong(rs.getString("contact")));
		    	b.setLat(Double.parseDouble(rs.getString("latitude")));
		    	b.setLan(Double.parseDouble(rs.getString("longitude")));
		    	b.setStatus(rs.getInt("status"));
		        b.setMsg("Sucessfully logged In ");
		        b.setUpdate(1);
		    System.out.println("SuccessFull DAO");
		    }
	     else{
	    	 b.setMsg("Not available");
	    	 b.setUpdate(0);
	    	 System.out.println("Failed DAO");
			    }
 		}
		catch(Exception e){
			System.out.println(e);
		}
		finally{
			if(con!=null){
			con.close();
				con = null;
			}
		}
		
	return b;
}

/*
public static String delete(UserBean b){
	
	int result;
	try{
	con = ConnectionCon.getConnection();
    String sql="delete from agents where agent_id=?";
    PreparedStatement ps = con.prepareStatement(sql);
    ps.setString(1,b.getId());
    result = ps.executeUpdate();
	}
	catch(Exception e){
		System.out.println(e);
	}
	finally{
		if(ps!=null | ps!="")
		{
			ps.close();
			ps=null;
		}
		if(con!=null|con!=""){
		con.close();
			con = null;
		}

	}
    if(result > 0){
    	return "Successfully deleted";
    }
    else
    {
    	return "Can't delete the record, try again";
    }

}


*/




}
